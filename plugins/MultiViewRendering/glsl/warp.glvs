#version 460 core

in vec2 texcoord;

uniform sampler2D color_tex;
uniform sampler2D depth_tex;

uniform mat4 p_source;

uniform vec4 eye_source;
uniform vec4 eye_target;

uniform float z_far;
uniform float shear;

out float discard_fs;
out vec4 color_fs;
out vec4 pos_eye;
out vec3 direction_fs;

void main()
{  	
	vec4 proj_one = inverse(p_source) * vec4(2*texcoord.s-1, 2*texcoord.t-1, 0, 1);
	vec4 proj_two = inverse(p_source) * vec4(2*texcoord.s-1, 2*texcoord.t-1, 1, 1);
	direction_fs = normalize(proj_one.xyz/proj_one.w - proj_two.xyz/proj_two.w);

	float pt_depth = textureLod(depth_tex, texcoord, 0).r;
	discard_fs = pt_depth < 1 ? 0 : 1;
	color_fs = textureLod(color_tex, texcoord, 0);

	vec4 pt_eye_coord = inverse(p_source) * vec4(2*texcoord.s-1, 2*texcoord.t-1, 2*pt_depth-1, 1);
	pos_eye = vec4(pt_eye_coord.xyz/pt_eye_coord.w,1);

	vec4 intersection_z_far = eye_target + (eye_target - pos_eye) * z_far / pos_eye.z;
	intersection_z_far.x = intersection_z_far.x - shear;

	vec4 intersection_pt_depth = eye_source + (eye_source-intersection_z_far) * pos_eye.z / intersection_z_far.z;

	vec4 new_pos_clip = p_source * intersection_pt_depth;

	gl_Position = vec4(new_pos_clip.x/new_pos_clip.w, 2*texcoord.t-1, 2*pt_depth-1, 1);
}
