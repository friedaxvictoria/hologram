#version 460 core

layout (local_size_x = 1, local_size_y = 1) in;

layout(binding = 0, rgba32f) uniform writeonly image2D color_tex;

uniform int screen_w;
uniform int quilt_cols;

layout(std430, binding = 0) buffer storage_buffer
{
    int col_depth[];
};

void main()
{  	
	ivec2 coord = ivec2(gl_GlobalInvocationID.xy);

	int index = coord.x+coord.y*(screen_w*quilt_cols);

	int left = index-1; 
	int right = index+1;
	if (coord.x == 0)
		left = index;
	else if (coord.x%screen_w == 0)
		right = index;
	int color_int_left = col_depth[left];
	int color_int_right = col_depth[right];

	//getting colours from: https://developer.download.nvidia.com/cg/bitfieldExtract.html
	uint mask = ~(0xffffffff << 8);
	float red = (((color_int_left >> 24) & mask) + ((color_int_right >> 24) & mask))/500.0;
	float green = (((color_int_left >> 16) & mask) + ((color_int_right >> 16) & mask))/500.0;
	float blue = (((color_int_left >> 8) & mask) + ((color_int_right >> 8) & mask))/500.0;
	float alpha = ((color_int_left & mask) + (color_int_right) & mask)/500.0;

	if (alpha != 0)
		imageStore(color_tex, coord, vec4(red,green,blue,alpha));
}