#version 460 core

layout (triangles, invocations = 4) in;
layout (triangle_strip, max_vertices = 3) out;

in VS_OUT {
	 vec2 texcoord_gs;
} gs_in[]; 

uniform int buf_width;
uniform int buf_height;

out vec4 color_fs;

layout(std430, binding = 0) buffer storage_buffer
{
    int col_depth[];
};

void main()
{
	for (int i = 0; i<3; i++){
		ivec2 coord = ivec2(gs_in[i].texcoord_gs.x*buf_width, gs_in[i].texcoord_gs.y*buf_height);
		int index = coord.x+coord.y*buf_width;
		int color_int = col_depth[index];

		uint mask;
		mask = ((1 << 8) - 1) << 16;
		uint red = color_int & mask;
		red = red >> 16;

		mask = ((1 << 8) - 1) << 8;
		uint green = color_int & mask;
		green = green >> 8;

		mask = ((1 << 8) - 1) << 0;
		uint blue = color_int & mask;

		color_fs = vec4(red/255.0,green/255.0,blue/255.0,1);

		gl_Position = gl_in[i].gl_Position;

		gl_Layer = gl_InvocationID;
		gl_ViewportIndex = gl_InvocationID;

		EmitVertex();
	}
	EndPrimitive(); 
}