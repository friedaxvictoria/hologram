#version 430

in vec2 texcoord_fs;

uniform float width;
uniform float height;

layout (binding=0) uniform sampler2D colour_tex;
layout (binding=1) uniform sampler2D depth_tex;

uniform mat4 proj_mat_rendered;
uniform mat4 inv_modelview_mat_rendered;

out vec4 frag_colour;

mat4 get_modelview_projection_matrix();



void main()
{	
	frag_colour = texture2D(colour_tex, texcoord_fs);
	

	//idea from sci vis lecture
	/*vec4 ndc_source = vec4(2/width * (gl_FragCoord.x - 0) - 1, 2/height * (gl_FragCoord.y - 0) - 1, 2 * gl_FragCoord.z - 1, 1.0);
	vec4 clip_target = get_modelview_projection_matrix() * inv_modelview_mat_rendered * inverse(proj_mat_rendered) * ndc_source;
	vec3 ndc_target = vec3(clip_target.xyz/clip_target.w);
	vec2 tex_coords_target = 1/2 * vec2(ndc_target.x - 1, ndc_target.y - 1);

	gl_FragDepth = texture(depth_tex, tex_coords_target).x;

	frag_colour = texture(colour_tex, tex_coords_target);*/
}